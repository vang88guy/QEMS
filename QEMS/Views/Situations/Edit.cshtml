@model QEMS.Models.Situation

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Situation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SituationId)

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, Model.Message, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Time, new { type = "time" })
                @Html.ValidationMessageFor(model => model.Time, Model.Time, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Date, new { type = "date" })
                @Html.ValidationMessageFor(model => model.Date, Model.Date, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Severity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Severity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Severity, "", new { @class = "text-danger" })
            </div>
        </div>
@if (User.IsInRole("Operator") == true)
{
        <div class="form-group">
            @Html.LabelFor(model => model.CallPoliceStation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CallPoliceStation)
                    @Html.ValidationMessageFor(model => model.CallPoliceStation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CallFireStation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CallFireStation)
                    @Html.ValidationMessageFor(model => model.CallFireStation, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CallAmbulance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.CallAmbulance)
                    @Html.ValidationMessageFor(model => model.CallAmbulance, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InProcess, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.InProcess)
                    @Html.ValidationMessageFor(model => model.InProcess, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
}
@if (User.IsInRole("Person") == true)
{
    <div class="form-group">
        @Html.LabelFor(model => model.Complete, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Complete)
                @Html.ValidationMessageFor(model => model.Complete, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="hidden" value="@Model.SituationId" name="id" id="id"/>
                <input type="submit" value="Save" class="btn btn-default" style="border:1px solid black" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
